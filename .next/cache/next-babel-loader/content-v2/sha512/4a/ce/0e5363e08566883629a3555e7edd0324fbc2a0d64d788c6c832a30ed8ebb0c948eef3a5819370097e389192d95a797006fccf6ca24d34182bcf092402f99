{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Gustavo\\\\Documents\\\\ws-ionic\\\\next-book-search\\\\src\\\\pages\\\\resultados.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState, useContext } from 'react';\nimport { Pesquisa } from '../components/Pesquisa';\nimport { BooksList } from '../components/BooksList';\nimport { fetchProducts } from '../api/api';\nimport { SearchContext } from '../contexts/SearchContext';\nexport default function Resultados() {\n  _s();\n\n  var _useState = useState([]),\n      products = _useState[0],\n      setProducts = _useState[1];\n\n  var _useState2 = useState(),\n      books = _useState2[0],\n      setBooks = _useState2[1];\n\n  var _useContext = useContext(SearchContext),\n      bookName = _useContext.bookName;\n\n  useEffect(function () {\n    fetchProducts().then(function (response) {\n      return setProducts(response.data);\n    })[\"catch\"](function (error) {\n      return console.log(error);\n    });\n    var livro = bookName.trim();\n    console.log(livro.replace(\" \", \"-\"));\n    /*\r\n    fetchBooks()\r\n        .then(response => setBooks(response.data))\r\n        .catch(error => console.log(error))\r\n    */\n  }, [bookName]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Pesquisa, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(BooksList, {\n      products: products\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Resultados, \"UlqzSW2zD2saGGiLA3pv/pYwBhI=\");\n\n_c = Resultados;\n\nvar _c;\n\n$RefreshReg$(_c, \"Resultados\");","map":{"version":3,"sources":["C:/Users/Gustavo/Documents/ws-ionic/next-book-search/src/pages/resultados.tsx"],"names":["useEffect","useState","useContext","Pesquisa","BooksList","fetchProducts","SearchContext","Resultados","products","setProducts","books","setBooks","bookName","then","response","data","error","console","log","livro","trim","replace"],"mappings":";;;;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,EAA8BC,UAA9B,QAAgD,OAAhD;AAGA,SAASC,QAAT,QAAyB,wBAAzB;AACA,SAASC,SAAT,QAA0B,yBAA1B;AAGA,SAASC,aAAT,QAA8B,YAA9B;AAEA,SAASC,aAAT,QAA8B,2BAA9B;AAEA,eAAe,SAASC,UAAT,GAAsB;AAAA;;AAAA,kBACDN,QAAQ,CAAY,EAAZ,CADP;AAAA,MAC1BO,QAD0B;AAAA,MAChBC,WADgB;;AAAA,mBAEPR,QAAQ,EAFD;AAAA,MAE1BS,KAF0B;AAAA,MAEnBC,QAFmB;;AAAA,oBAGZT,UAAU,CAACI,aAAD,CAHE;AAAA,MAGzBM,QAHyB,eAGzBA,QAHyB;;AAKjCZ,EAAAA,SAAS,CAAC,YAAM;AACZK,IAAAA,aAAa,GACRQ,IADL,CACU,UAAAC,QAAQ;AAAA,aAAIL,WAAW,CAACK,QAAQ,CAACC,IAAV,CAAf;AAAA,KADlB,WAEW,UAAAC,KAAK;AAAA,aAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAAJ;AAAA,KAFhB;AAGA,QAAIG,KAAK,GAAGP,QAAQ,CAACQ,IAAT,EAAZ;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAYC,KAAK,CAACE,OAAN,CAAc,GAAd,EAAmB,GAAnB,CAAZ;AACA;AACR;AACA;AACA;AACA;AACK,GAXQ,EAWN,CAACT,QAAD,CAXM,CAAT;AAaA,sBACI;AAAA,4BACI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,SAAD;AAAW,MAAA,QAAQ,EAAEJ;AAArB;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADJ;AAMH;;GAxBuBD,U;;KAAAA,U","sourcesContent":["import { useEffect, useState, useContext } from 'react';\r\nimport { Container } from 'react-bootstrap';\r\nimport styles from '../styles/pages/Resultados.module.css';\r\nimport { Pesquisa } from '../components/Pesquisa';\r\nimport { BooksList } from '../components/BooksList';\r\nimport { Product } from '../types/types';\r\nimport { Books } from '../types/books';\r\nimport { fetchProducts } from '../api/api';\r\nimport { fetchBooks } from '../api/api';\r\nimport { SearchContext } from '../contexts/SearchContext';\r\n\r\nexport default function Resultados() {\r\n    const [products, setProducts] = useState<Product[]>([]);\r\n    const [books, setBooks] = useState<Books>();\r\n    const { bookName } = useContext(SearchContext);\r\n\r\n    useEffect(() => {\r\n        fetchProducts()\r\n            .then(response => setProducts(response.data))\r\n            .catch(error => console.log(error))\r\n        var livro = bookName.trim();\r\n        console.log(livro.replace(\" \", \"-\"))\r\n        /*\r\n        fetchBooks()\r\n            .then(response => setBooks(response.data))\r\n            .catch(error => console.log(error))\r\n        */\r\n    }, [bookName]);\r\n    \r\n    return (\r\n        <>\r\n            <Pesquisa />\r\n            <BooksList products={products}/>\r\n        </>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}