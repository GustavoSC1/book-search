{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Gustavo\\\\Documents\\\\ws-ionic\\\\next-book-search\\\\src\\\\pages\\\\resultados.tsx\";\nimport { useEffect, useState, useContext } from 'react';\nimport { Pesquisa } from '../components/Pesquisa';\nimport { BooksList } from '../components/BooksList';\nimport { BookListEmpty } from '../components/BookListEmpty';\nimport { fetchBooks } from '../api/api';\nimport { SearchContext } from '../contexts/SearchContext';\nimport { Footer } from '../components/Footer';\nexport default function Resultados() {\n  const {\n    0: products,\n    1: setProducts\n  } = useState([]);\n  const {\n    0: books,\n    1: setBooks\n  } = useState({\n    kind: \"\",\n    totalItems: -1,\n    items: []\n  });\n  const {\n    bookName\n  } = useContext(SearchContext);\n  useEffect(() => {\n    var livro = bookName.trim();\n    livro = livro.replace(/ /g, \"-\");\n\n    if (livro != \"\") {\n      fetchBooks(livro).then(response => setBooks(response.data)).catch(error => console.log(error));\n    }\n  }, [bookName]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Pesquisa, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), books.totalItems == -1 ? /*#__PURE__*/_jsxDEV(BookListEmpty, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(BooksList, {\n      books: books.items\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}","map":{"version":3,"sources":["C:/Users/Gustavo/Documents/ws-ionic/next-book-search/src/pages/resultados.tsx"],"names":["useEffect","useState","useContext","Pesquisa","BooksList","BookListEmpty","fetchBooks","SearchContext","Footer","Resultados","products","setProducts","books","setBooks","kind","totalItems","items","bookName","livro","trim","replace","then","response","data","catch","error","console","log"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,EAA8BC,UAA9B,QAAgD,OAAhD;AACA,SAASC,QAAT,QAAyB,wBAAzB;AACA,SAASC,SAAT,QAA0B,yBAA1B;AACA,SAASC,aAAT,QAA8B,6BAA9B;AAGA,SAASC,UAAT,QAA2B,YAA3B;AACA,SAASC,aAAT,QAA8B,2BAA9B;AACA,SAASC,MAAT,QAAuB,sBAAvB;AAEA,eAAe,SAASC,UAAT,GAAsB;AACjC,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0BV,QAAQ,CAAY,EAAZ,CAAxC;AACA,QAAM;AAAA,OAACW,KAAD;AAAA,OAAQC;AAAR,MAAoBZ,QAAQ,CAAQ;AAACa,IAAAA,IAAI,EAAE,EAAP;AACtCC,IAAAA,UAAU,EAAE,CAAC,CADyB;AAEtCC,IAAAA,KAAK,EAAE;AAF+B,GAAR,CAAlC;AAGA,QAAM;AAAEC,IAAAA;AAAF,MAAef,UAAU,CAACK,aAAD,CAA/B;AAGAP,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIkB,KAAK,GAAGD,QAAQ,CAACE,IAAT,EAAZ;AACAD,IAAAA,KAAK,GAAGA,KAAK,CAACE,OAAN,CAAc,IAAd,EAAoB,GAApB,CAAR;;AACA,QAAGF,KAAK,IAAI,EAAZ,EAAe;AACXZ,MAAAA,UAAU,CAACY,KAAD,CAAV,CACKG,IADL,CACUC,QAAQ,IAAIT,QAAQ,CAACS,QAAQ,CAACC,IAAV,CAD9B,EAEKC,KAFL,CAEWC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAFpB;AAGH;AACJ,GARQ,EAQN,CAACR,QAAD,CARM,CAAT;AAUA,sBACI;AAAA,4BACI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKL,KAAK,CAACG,UAAN,IAAoB,CAAC,CAArB,gBACG,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,YADH,gBAEC,QAAC,SAAD;AAAW,MAAA,KAAK,EAAEH,KAAK,CAACI;AAAxB;AAAA;AAAA;AAAA;AAAA,YAJN,eAKI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA,kBADJ;AASH","sourcesContent":["import { useEffect, useState, useContext } from 'react';\r\nimport { Pesquisa } from '../components/Pesquisa';\r\nimport { BooksList } from '../components/BooksList';\r\nimport { BookListEmpty } from '../components/BookListEmpty';\r\nimport { Product } from '../types/types';\r\nimport { Books } from '../types/books';\r\nimport { fetchBooks } from '../api/api';\r\nimport { SearchContext } from '../contexts/SearchContext';\r\nimport { Footer } from '../components/Footer';\r\n\r\nexport default function Resultados() {\r\n    const [products, setProducts] = useState<Product[]>([]);\r\n    const [books, setBooks] = useState<Books>({kind: \"\",\r\n        totalItems: -1,\r\n        items: []});\r\n    const { bookName } = useContext(SearchContext);\r\n\r\n    \r\n    useEffect(() => {\r\n        var livro = bookName.trim();\r\n        livro = livro.replace(/ /g, \"-\");\r\n        if(livro != \"\"){\r\n            fetchBooks(livro)\r\n                .then(response => setBooks(response.data))\r\n                .catch(error => console.log(error))      \r\n        }\r\n    }, [bookName]);\r\n    \r\n    return (\r\n        <>\r\n            <Pesquisa />\r\n            {books.totalItems == -1 ? \r\n                <BookListEmpty />                               \r\n            : <BooksList books={books.items}/> }    \r\n            <Footer />        \r\n        </>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}